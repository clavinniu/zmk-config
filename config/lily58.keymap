/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        base {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC              &kp N1            &kp N2              &kp N3            &kp N4               &kp N5                                             &kp N6                   &kp N7                &kp N8                           &kp N9               &kp N0                &kp EQUAL
&kp TAB              &kp Q             &kp W               &kp E             &kp R                &lt 1 T                                            &lt 1 Y                  &kp U                 &kp I                            &kp O                &kp P                 &kp MINUS
&lt 3 LG(LS(SPACE))  &mt LEFT_SHIFT A  &mt LEFT_CONTROL S  &mt LEFT_ALT D    &mt LEFT_GUI F       &lt 2 G                                            &lt 2 H                  &mt RIGHT_GUI J       &mt RIGHT_CONTROL K              &mt RIGHT_CONTROL L  &mt RIGHT_SHIFT SEMI  &kp ENTER
&kp LSHFT            &kp Z             &kp X               &kp C             &kp V                &lt 3 B                 &lt 1 LBKT    &lt 1 RBKT   &lt 3 N                  &kp M                 &kp COMMA                        &kp DOT              &kp FSLH              &kp RSHFT
                                                           &kp LEFT_CONTROL  &mt LEFT_ALT DELETE  &mt LEFT_GUI BACKSPACE  &lt 2 RET     &lt 2 SPACE  &mt RIGHT_GUI BACKSPACE  &mt RIGHT_ALT DELETE  &mt RIGHT_CONTROL DOUBLE_QUOTES
            >;
        };

        functions {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans         &kp F1        &kp F2        &kp F3        &kp F4        &kp F5                          &kp F6            &kp F7         &kp F8         &kp F9                &kp F10                &kp F11
&kp C_BRI_UP   &kp F11       &kp F12       &kp F13       &kp F14       &kp F15                         &kp LC(UP_ARROW)  &kp C_PREV     &kp C_PLAY     &kp C_NEXT            &kp C_MUTE             &kp C_VOLUME_UP
&kp C_BRI_DEC  &kp EXCL      &kp AT        &kp HASH      &kp DOLLAR    &kp PRCNT                       &kp CARET         &kp AMPERSAND  &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp C_VOL_DN
&bt BT_CLR     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans    &trans  &kp TILDE2        &kp PIPE       &kp BACKSLASH  &kp SINGLE_QUOTE      &kp DOUBLE_QUOTES      &mt RIGHT_SHIFT CAPS
                                           &trans        &trans        &trans        &trans    &trans  &trans            &trans         &trans
            >;

            label = "functions";
        };

        arrows {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &kp HOME  &trans          &kp PAGE_UP    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &kp END   &kp UP          &kp PAGE_DOWN  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &kp LEFT  &kp DOWN_ARROW  &kp RIGHT      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans          &trans         &trans  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans
            >;

            label = "arrows";
        };

        keypad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                       &trans     &kp CLEAR     &kp SLASH     &kp ASTRK     &kp MINUS   &trans
&trans  &trans  &trans  &trans  &trans  &trans                       &kp ASTRK  &kp N7        &kp N8        &kp N9        &kp PLUS    &trans
&trans  &trans  &trans  &trans  &trans  &trans                       &kp SLASH  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp MINUS   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans     &kp N0     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD  &trans
                        &trans  &trans  &trans  &trans    &kp ENTER  &kp N0     &trans        &kp PERIOD
            >;

            label = "keypad";
        };
    };
};
